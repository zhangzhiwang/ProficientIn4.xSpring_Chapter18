<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.asiainfo.com/schema/service
       http://www.asiainfo.com/schema/service.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/websocket
       http://www.springframework.org/schema/websocket/spring-websocket.xsd
       ">

	<!-- 1、配置占位符读取其他配置文件的属性 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 2、配置父容器的组建扫描 -->
	<context:component-scan base-package="com.asiainfo.service,com.asiainfo.dao"></context:component-scan>

	<!-- 3、事务配置 -->
	<!-- 3.1 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" p:driverClassName="${driver}" p:url="${url}" p:username="${username}" p:password="${password}" destroy-method="close"></bean>
	<!-- 3.2 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	<!-- 3.3 配置事务注解扫描 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 4、配置整合的ORM框架（这里是MyBatis） -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" p:dataSource-ref="dataSource" p:configLocation="classpath:mybatisConfig.xml" p:mapperLocations=""></bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory">
			<ref bean="sqlSessionFactory"/>
		</constructor-arg>
	</bean>
	<!-- 将Mybatis的DAO接口转换为Spring的bean -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:sqlSessionFactoryBeanName="sqlSessionFactory" p:basePackage="com.asiainfo.dao"></bean>
</beans>